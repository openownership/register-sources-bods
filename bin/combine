#!/usr/bin/env bash
set -Eeuo pipefail

date=$(date -Is)
dst_ext=.jsonl.gz
log_ext=.log

src_d=$1
dst_d=${2:-data/exports}
dst_f=$dst_d/${3:-$date}$dst_ext

src_d=$(realpath -s --relative-base . "$src_d")
dst_f=$(realpath -s --relative-base . "$dst_f")
log_f=$(dirname "$dst_f")/$(basename "$dst_f" "$dst_ext").$date$log_ext
snp_f=$(dirname "$dst_f")/$(basename "$dst_f" "$dst_ext").$date$dst_ext
idx_d=$dst_d/indexes
#-------------------------------------------------------------------------------
function _clean() {
    rm -rf "${tmp:?}"
}

function _echo() {
    local msg
    msg=${1:-}
    echo -e "$msg" | tee -a "$log_f"
}

function _log() {
    local msg sep
    msg=$1
    sep=${2:-" "}
    printf "%9s$sep" "$msg" | tee -a "$log_f"
}

function _index_f_idx() {
    echo "$idx_d/$1.idx"
}

function _index_f_idxn() {
    echo "$idx_d/$1.idxn"
}

function _index_size() {
    local f idxn
    f=$1
    idxn=$(_index_f_idxn "$f")
    if [ -f "$idxn" ] ; then
        cat "$idxn"
    else
        echo 0
    fi
}

function _index_create() {
    local f idx idxn
    f=$1
    idx=$(_index_f_idx "$f")
    idxn=$(_index_f_idxn "$f")
    mkdir -p "$(dirname "$idx")"
    if [ ! -f "$f" ] ; then
        touch "$idx"
    elif [ "$(file -b --mime-type "$f")" == 'application/gzip' ] ; then
        zcat "$f" | jq -r '.statementID' | sort -u > "$idx"
    else
        jq -r '.statementID' < "$f" | sort -u > "$idx"
    fi
    wc -l < "$idx" > "$idxn"
}

function _index_diff() {
    local f1 f2 fo idx1 idx2
    f1=$1
    f2=$2
    fo=$3
    idx1=$(_index_f_idx "$f1")
    idx2=$(_index_f_idx "$f2")
    comm -23 "$idx1" "$idx2" > "$fo"
    wc -l < "$fo"
}

function _index_insert() {
    local f idx idxn
    f=$1
    fi=$2
    idx=$(_index_f_idx "$f")
    idxn=$(_index_f_idxn "$f")
    tmp_idx=$tmp/idx
    cat "$idx" "$fi" | sort -u > "$tmp_idx"
    mv "$tmp_idx" "$idx"
    wc -l < "$idx" > "$idxn"
}

trap _clean EXIT
tmp=$(mktemp -d)
#-------------------------------------------------------------------------------
echo
_echo "$date"
#-------------------------------------------------------------------------------
_echo "\n=== LIST\n"

mapfile -d '' src_fs < <(find "$src_d" \
    \( -name '.*' -prune \) -o -type f -print0 | sort -z)
_echo "files: ${#src_fs[@]}"
#-------------------------------------------------------------------------------
_echo "\n=== INDEX\n"

for f in "${src_fs[@]}" "$dst_f" ; do
    _log "$f"
    n=$(_index_size "$f")
    _log "$n"
    if [ "$n" -eq 0 ] ; then
        _index_create "$f"
        st='*'
    else
        st='.'
    fi
    n=$(_index_size "$f")
    _log "$n"
    _log "$st" "\n"
done
#-------------------------------------------------------------------------------
_echo "\n=== COMBINE\n"

for src_f in "${src_fs[@]}" ; do
    _log "$src_f"
    src_n=$(_index_size "$src_f")
    _log "$src_n"
    tmp_diff=$tmp/diff
    diff_n=$(_index_diff "$src_f" "$dst_f" "$tmp_diff")
    _log "$diff_n"
    if [ "$diff_n" -gt 0 ] ; then
        tmp_grep=$tmp/grep
        jq -R '.' "$tmp_diff" | sed 's/^/"statementID":/' > "$tmp_grep"
        jq -cS '.' "$src_f" | grep -f "$tmp_grep" -F | awk '!x[$0]++' |
            gzip -c >> "$dst_f"
    fi
    _index_insert "$dst_f" "$tmp_diff"
    dst_n=$(_index_size "$dst_f")
    _log "$dst_n"
    # shellcheck disable=SC2012
    dst_s=$(ls -lh "$dst_f" | awk '{ print $5 }')
    _log "$dst_s"
    if [ "$diff_n" -eq 0 ] ; then
        st='.'
    elif [ "$diff_n" -eq "$src_n" ] ; then
        st='*'
    else
        st='~'
    fi
    _log "$st" "\n"
done
#-------------------------------------------------------------------------------
_echo "\n=== SNAPSHOT\n"

cp "$dst_f" "$snp_f"
#-------------------------------------------------------------------------------
_echo "\n=== OUTPUT\n"

_echo "source:      $src_d"
_echo "destination: $dst_f"
_echo "snapshot:    $snp_f"
_echo "values:      $dst_n"
_echo "size:        $dst_s"
_echo "log:         $log_f"
_echo "duration:    ${SECONDS}s"
echo
